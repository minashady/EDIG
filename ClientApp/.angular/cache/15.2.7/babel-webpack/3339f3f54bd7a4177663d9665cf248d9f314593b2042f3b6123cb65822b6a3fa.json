{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  constructor() {\n    this.socket = new WebSocket('ws://localhost:7272/priceUpdateHub');\n    this.subject = new Subject();\n    this.socket.onmessage = event => {\n      const update = JSON.parse(event.data);\n      this.subject.next(update);\n    };\n  }\n  getMessages() {\n    return this.subject.asObservable();\n  }\n}\nWebSocketService.ɵfac = function WebSocketService_Factory(t) {\n  return new (t || WebSocketService)();\n};\nWebSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebSocketService,\n  factory: WebSocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAoB,MAAM;;AAM1C,OAAM,MAAOC,gBAAgB;EAI3BC;IACE,IAAI,CAACC,MAAM,GAAG,IAAIC,SAAS,CAAC,oCAAoC,CAAC;IACjE,IAAI,CAACC,OAAO,GAAG,IAAIL,OAAO,EAAe;IAEzC,IAAI,CAACG,MAAM,CAACG,SAAS,GAAGC,KAAK,IAAG;MAC9B,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAgB;MACpD,IAAI,CAACN,OAAO,CAACO,IAAI,CAACJ,MAAM,CAAC;IAC3B,CAAC;EACH;EAEAK,WAAW;IACT,OAAO,IAAI,CAACR,OAAO,CAACS,YAAY,EAAE;EACpC;;AAhBWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAc,SAAhBd,gBAAgB;EAAAe,YAFf;AAAM","names":["Subject","WebSocketService","constructor","socket","WebSocket","subject","onmessage","event","update","JSON","parse","data","next","getMessages","asObservable","factory","providedIn"],"sourceRoot":"","sources":["W:\\97_Applying\\EDIG\\Stock_Exchange\\Stock_Exchange\\ClientApp\\Services\\webSocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { StockUpdate } from '../src/app/stocks/stocks.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n  private socket: WebSocket;\r\n  private subject: Subject<StockUpdate>;\r\n\r\n  constructor() {\r\n    this.socket = new WebSocket('ws://localhost:7272/priceUpdateHub');\r\n    this.subject = new Subject<StockUpdate>();\r\n\r\n    this.socket.onmessage = event => {\r\n      const update = JSON.parse(event.data) as StockUpdate;\r\n      this.subject.next(update);\r\n    };\r\n  }\r\n\r\n  getMessages(): Observable<StockUpdate> {\r\n    return this.subject.asObservable();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}