{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../Services/webSocket.service\";\nimport * as i3 from \"@angular/common\";\nfunction StocksComponent_tr_16_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stock_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(stock_r1.priceHistories[stock_r1.priceHistories.length - 1].price);\n  }\n}\nfunction StocksComponent_tr_16_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stock_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(stock_r1.priceHistories[stock_r1.priceHistories.length - 1].timeStamp);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"price-up\": a0,\n    \"price-down\": a1\n  };\n};\nfunction StocksComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 4);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, StocksComponent_tr_16_td_7_Template, 2, 1, \"td\", 5);\n    i0.ɵɵtemplate(8, StocksComponent_tr_16_td_8_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stock_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r1.symbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, stock_r1.currentPrice > stock_r1.priceHistories[stock_r1.priceHistories.length - 1].price, stock_r1.currentPrice < stock_r1.priceHistories[stock_r1.priceHistories.length - 1].price));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", stock_r1.currentPrice, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", stock_r1.priceHistories && stock_r1.priceHistories.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", stock_r1.priceHistories && stock_r1.priceHistories.length > 0);\n  }\n}\nexport class StocksComponent {\n  constructor(http, webSocketService) {\n    this.http = http;\n    this.webSocketService = webSocketService;\n    this.stocks = [];\n  }\n  ngOnInit() {\n    this.getStocks();\n  }\n  getStocks() {\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\n    this.http.get('http://localhost:7272/stocks', {\n      headers\n    }).subscribe(data => {\n      this.stocks = data;\n    });\n    this.webSocketService.getMessages().pipe(catchError(err => {\n      console.error('Error in subscribe:', err);\n      return throwError(err);\n    })).subscribe(PriceUpdate => {\n      console.log(\"frontend updating\");\n      // Find the stock that was updated\n      const stock = this.stocks.find(s => s.symbol === PriceUpdate.symbol);\n      if (stock) {\n        // Get the previous price from PriceHistories\n        const previousPrice = stock.priceHistories[stock.priceHistories.length - 1].price;\n        // Update the current price\n        stock.currentPrice = PriceUpdate.price;\n        // Add the new price to PriceHistories\n        stock.priceHistories.push({\n          price: PriceUpdate.price,\n          timeStamp: new Date().toISOString()\n        });\n      }\n    });\n  }\n}\nStocksComponent.ɵfac = function StocksComponent_Factory(t) {\n  return new (t || StocksComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.WebSocketService));\n};\nStocksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StocksComponent,\n  selectors: [[\"app-stocks\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"text-md-center\", \"m-5\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [4, \"ngIf\"]],\n  template: function StocksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Sample Stocks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\")(4, \"tr\")(5, \"th\", 2);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 2);\n      i0.ɵɵtext(8, \"Symbol\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 2);\n      i0.ɵɵtext(10, \"Current Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 2);\n      i0.ɵɵtext(12, \"Past Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 2);\n      i0.ɵɵtext(14, \"Time Stamp\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, StocksComponent_tr_16_Template, 9, 9, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stocks);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","catchError","throwError","i0","StocksComponent","constructor","http","webSocketService","stocks","ngOnInit","getStocks","headers","set","get","subscribe","data","getMessages","pipe","err","console","error","PriceUpdate","log","stock","find","s","symbol","previousPrice","priceHistories","length","price","currentPrice","push","timeStamp","Date","toISOString","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["W:\\97_Applying\\EDIG\\Stock_Exchange\\Stock_Exchange\\ClientApp\\src\\app\\stocks\\stocks.component.ts","W:\\97_Applying\\EDIG\\Stock_Exchange\\Stock_Exchange\\ClientApp\\src\\app\\stocks\\stocks.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { WebSocketService } from '../../../Services/webSocket.service';\r\nimport { catchError, throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-stocks',\r\n  templateUrl: './stocks.component.html',\r\n  styleUrls: ['./stocks.component.css']\r\n})\r\nexport class StocksComponent implements OnInit {\r\n  stocks: StocksDetails[];\r\n\r\n  constructor(private http: HttpClient, private webSocketService: WebSocketService) { // Inject WebSocketService\r\n    this.stocks = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStocks();\r\n  }\r\n\r\n  getStocks() {\r\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\r\n\r\n    this.http.get<StocksDetails[]>('http://localhost:7272/stocks', { headers }).subscribe(data => {\r\n      this.stocks = data;\r\n    });\r\n\r\n    this.webSocketService.getMessages().pipe(\r\n      catchError(err => {\r\n        console.error('Error in subscribe:', err);\r\n        return throwError(err);\r\n      })\r\n    ).subscribe((PriceUpdate: StockUpdate) => { // Specify the type of update\r\n      console.log(\"frontend updating\");\r\n      // Find the stock that was updated\r\n      const stock = this.stocks.find(s => s.symbol === PriceUpdate.symbol);\r\n\r\n      if (stock) {\r\n        // Get the previous price from PriceHistories\r\n        const previousPrice = stock.priceHistories[stock.priceHistories.length - 1].price;\r\n\r\n        // Update the current price\r\n        stock.currentPrice = PriceUpdate.price;\r\n\r\n        // Add the new price to PriceHistories\r\n        stock.priceHistories.push({ price: PriceUpdate.price, timeStamp: new Date().toISOString() });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport interface StocksDetails {\r\n  title: string,\r\n  symbol: string,\r\n  currentPrice: number,\r\n  priceHistories: PriceHistory[]\r\n}\r\n\r\nexport interface PriceHistory {\r\n  price: number,\r\n  timeStamp: string\r\n}\r\nexport interface StockUpdate {\r\n  symbol: string;\r\n  price: number;\r\n}\r\n","<h3 class=\"text-md-center m-5\">Sample Stocks</h3>\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Title</th>\r\n      <th scope=\"col\">Symbol</th>\r\n      <th scope=\"col\">Current Price</th>\r\n      <th scope=\"col\">Past Price</th>\r\n      <th scope=\"col\">Time Stamp</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let stock of stocks\">\r\n      <td>{{stock.title}}</td>\r\n      <td>{{stock.symbol}}</td>\r\n      <td [ngClass]=\"{'price-up': stock.currentPrice > stock.priceHistories[stock.priceHistories.length - 1].price, 'price-down': stock.currentPrice < stock.priceHistories[stock.priceHistories.length - 1].price}\">\r\n        {{stock.currentPrice}}\r\n      </td>\r\n      <td *ngIf=\"stock.priceHistories && stock.priceHistories.length > 0\">{{stock.priceHistories[stock.priceHistories.length - 1].price}}</td>\r\n      <td *ngIf=\"stock.priceHistories && stock.priceHistories.length > 0\">{{stock.priceHistories[stock.priceHistories.length - 1].timeStamp}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}