{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../../Services/webSocket.service\";\nimport * as i4 from \"@angular/common\";\nfunction StocksComponent_tr_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const order_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r2.symbol);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r2.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", order_r2.quantity, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 4, order_r2.timeStamp, \"medium\"));\n  }\n}\nfunction StocksComponent_tr_75_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stock_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, stock_r3.priceHistories[stock_r3.priceHistories.length - 2].price, \"1.2-2\"));\n  }\n}\nfunction StocksComponent_tr_75_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const stock_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, stock_r3.priceHistories[stock_r3.priceHistories.length - 2].timeStamp, \"medium\"));\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"price-up\": a0,\n    \"price-down\": a1\n  };\n};\nfunction StocksComponent_tr_75_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 29);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, StocksComponent_tr_75_td_8_Template, 3, 4, \"td\", 30);\n    i0.ɵɵtemplate(9, StocksComponent_tr_75_td_9_Template, 3, 4, \"td\", 30);\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function StocksComponent_tr_75_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const stock_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openModal(stock_r3.symbol, \"Buy\"));\n    });\n    i0.ɵɵtext(12, \" Buy \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function StocksComponent_tr_75_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const stock_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.openModal(stock_r3.symbol, \"Sell\"));\n    });\n    i0.ɵɵtext(15, \" Sell \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const stock_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(stock_r3.symbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, stock_r3.priceHistories && stock_r3.priceHistories.length > 1 && stock_r3.currentPrice > stock_r3.priceHistories[stock_r3.priceHistories.length - 2].price, stock_r3.priceHistories && stock_r3.priceHistories.length > 1 && stock_r3.currentPrice < stock_r3.priceHistories[stock_r3.priceHistories.length - 2].price));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 6, stock_r3.currentPrice, \"1.2-2\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", stock_r3.priceHistories && stock_r3.priceHistories.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", stock_r3.priceHistories && stock_r3.priceHistories.length > 0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"show\": a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nexport class StocksComponent {\n  constructor(fb, http, webSocketService) {\n    this.fb = fb;\n    this.http = http;\n    this.webSocketService = webSocketService;\n    this.isModalOpen = false;\n    this.isModalHistoryOpen = false;\n    this.stocks = [];\n    this.orders = [];\n    this.form = this.fb.group({\n      stockSymbol: [{\n        value: '',\n        disabled: true\n      }],\n      orderType: [{\n        value: '',\n        disabled: true\n      }],\n      quantity: ['']\n    });\n  }\n  openModal(stockSymbol, orderType) {\n    this.form.setValue({\n      stockSymbol: stockSymbol,\n      orderType: orderType,\n      quantity: ''\n    });\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n  }\n  openHistoryModal() {\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\n    this.http.get('http://localhost:7272/order', {\n      headers\n    }).subscribe(data => {\n      this.orders = data;\n      if (this.orders.length < 1) {\n        Swal.fire({\n          title: 'You have not placed any orders Yet',\n          text: 'Orders placed will show up here',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n      } else {\n        this.isModalHistoryOpen = true;\n      }\n    });\n  }\n  closeHistoryModal() {\n    this.isModalHistoryOpen = false;\n  }\n  ngOnInit() {\n    this.getStocks();\n  }\n  getStocks() {\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\n    this.http.get('http://localhost:7272/stocks', {\n      headers\n    }).subscribe(data => {\n      this.stocks = data;\n    });\n    this.webSocketService.getMessages().pipe(catchError(err => {\n      console.error('Error in subscribe:', err);\n      return throwError(err);\n    })).subscribe(PriceUpdate => {\n      console.log(\"frontend updating\");\n      // Find the stock that was updated\n      const stock = this.stocks.find(s => s.symbol === PriceUpdate.symbol);\n      if (stock) {\n        // Get the previous price from PriceHistories\n        const previousPrice = stock.priceHistories[stock.priceHistories.length - 1].price;\n        // Update the current price\n        stock.currentPrice = PriceUpdate.price;\n        // Add the new price to PriceHistories\n        stock.priceHistories.push({\n          price: PriceUpdate.price,\n          timeStamp: new Date().toISOString()\n        });\n        stock.isPriceRecentlyUpdated = true;\n        setTimeout(() => {\n          stock.isPriceRecentlyUpdated = false;\n        }, 3000);\n      }\n    });\n  }\n  placeOrder() {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.onmouseenter = Swal.stopTimer;\n        toast.onmouseleave = Swal.resumeTimer;\n      }\n    });\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\n    const order = {\n      Symbol: this.form.get('stockSymbol')?.value,\n      Type: this.form.get('orderType')?.value,\n      Quantity: this.form.get('quantity')?.value,\n      TimeStamp: new Date().toISOString()\n    };\n    if (order.Symbol == \"\" || order.Symbol == null) {\n      Toast.fire({\n        icon: \"error\",\n        title: \"You have to enter a valid stock Symbol\"\n      });\n    } else if (order.Type == \"\" || order.Type == null) {\n      Toast.fire({\n        icon: \"error\",\n        title: \"You have to enter a valid order type (either Buy or Sell)\"\n      });\n    } else if (order.Quantity == \"\" || order.Quantity == null) {\n      Toast.fire({\n        icon: \"error\",\n        title: \"You have to enter a stock quantity for your order\"\n      });\n    } else if (!this.stocks.some(stock => stock.symbol === order.Symbol)) {\n      Toast.fire({\n        icon: \"error\",\n        title: \"Your chosen Stock is not among the available stocks , please choose one of the available stocks\"\n      });\n    } else if (!this.orders.some(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Buy\") && order.Type == \"Sell\") {\n      Toast.fire({\n        icon: \"error\",\n        title: \"You cannot sell a stock you don't own\"\n      });\n    } else if (order.Type == \"Sell\") {\n      // Calculate the total quantity of this stock that the user has bought and sold\n      let totalBought = this.orders.filter(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Buy\").reduce((sum, pastOrder) => sum + pastOrder.quantity, 0);\n      let totalSold = this.orders.filter(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Sell\").reduce((sum, pastOrder) => sum + pastOrder.quantity, 0);\n      // Check if the user has enough stocks to sell\n      if (totalBought - totalSold < order.Quantity) {\n        Toast.fire({\n          icon: \"error\",\n          title: `You don't have enough stocks to sell. You only have ${totalBought - totalSold} stocks.`\n        });\n      }\n    } else {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: `Your order details are in order, are you sure you want to continue? You are about to ${order.Type} ${order.Quantity} of Stock ${order.Symbol}`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.http.post('http://localhost:7272/order', order, {\n            headers\n          }).subscribe(response => {\n            console.log(response);\n            const order = {\n              symbol: this.form.get('stockSymbol')?.value,\n              type: this.form.get('orderType')?.value,\n              quantity: this.form.get('quantity')?.value,\n              timeStamp: new Date().toISOString()\n            };\n            this.orders.push(order);\n          });\n          this.closeModal();\n          Toast.fire({\n            icon: \"success\",\n            title: \"Your order has been placed successfully, you can check your order history for more details\"\n          });\n        }\n      });\n    }\n  }\n}\nStocksComponent.ɵfac = function StocksComponent_Factory(t) {\n  return new (t || StocksComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.WebSocketService));\n};\nStocksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StocksComponent,\n  selectors: [[\"app-stocks\"]],\n  decls: 76,\n  vars: 17,\n  consts: [[1, \"text-md-center\", \"m-5\"], [2, \"background-color\", \"snow\", \"border-radius\", \"10px\", \"box-shadow\", \"5px 5px 15px rgba(0,0,0,0.3)\", \"padding\", \"20px\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"transparent\", \"border-color\", \"blue\", \"color\", \"black\", 3, \"click\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"orderModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\", 2, \"background-color\", \"snow\", \"border-radius\", \"10px\", \"box-shadow\", \"5px 5px 15px rgba(0,0,0,0.3)\"], [1, \"modal-header\"], [\"id\", \"orderModalLabel\", 1, \"modal-title\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"stockSymbol\"], [\"type\", \"text\", \"id\", \"stockSymbol\", \"formControlName\", \"stockSymbol\", \"placeholder\", \"Enter Stock Symbol\", 1, \"form-control\", 3, \"disabled\"], [\"for\", \"orderType\"], [\"formControlName\", \"orderType\", \"id\", \"orderType\", 1, \"form-control\", 3, \"disabled\"], [\"for\", \"quantity\"], [\"type\", \"number\", \"id\", \"quantity\", \"formControlName\", \"quantity\", \"placeholder\", \"Enter Quantity\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-scrollable\"], [\"id\", \"orderHistoryModalLabel\", 1, \"modal-title\"], [1, \"modal-body\", \"table-responsive\"], [1, \"table\"], [1, \"thead-light\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"table-responsive\"], [3, \"ngClass\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"springgreen\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"red\", 3, \"click\"]],\n  template: function StocksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Sample Stocks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function StocksComponent_Template_button_click_4_listener() {\n        return ctx.openHistoryModal();\n      });\n      i0.ɵɵtext(5, \" Order history \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"h5\", 8);\n      i0.ɵɵtext(11, \"Place Order\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"form\", 10)(14, \"div\", 11)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Stock Symbol\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Order Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 15)(22, \"option\");\n      i0.ɵɵtext(23, \"Buy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"option\");\n      i0.ɵɵtext(25, \"Sell\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 11)(27, \"label\", 16);\n      i0.ɵɵtext(28, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 18)(31, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function StocksComponent_Template_button_click_31_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵtext(32, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function StocksComponent_Template_button_click_33_listener() {\n        return ctx.placeOrder();\n      });\n      i0.ɵɵtext(34, \"Place Order\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(35, \"div\", 4)(36, \"div\", 21)(37, \"div\", 6)(38, \"div\", 7)(39, \"h5\", 22);\n      i0.ɵɵtext(40, \"Place Order\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 23)(42, \"table\", 24)(43, \"thead\", 25)(44, \"tr\")(45, \"th\", 26);\n      i0.ɵɵtext(46, \"Stock Symbol\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\", 26);\n      i0.ɵɵtext(48, \"Order Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\", 26);\n      i0.ɵɵtext(50, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"th\", 26);\n      i0.ɵɵtext(52, \"Order Time\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"tbody\");\n      i0.ɵɵtemplate(54, StocksComponent_tr_54_Template, 10, 7, \"tr\", 27);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(55, \"div\", 18)(56, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function StocksComponent_Template_button_click_56_listener() {\n        return ctx.closeHistoryModal();\n      });\n      i0.ɵɵtext(57, \"Close\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(58, \"div\", 28)(59, \"table\", 24)(60, \"thead\", 25)(61, \"tr\")(62, \"th\", 26);\n      i0.ɵɵtext(63, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"th\", 26);\n      i0.ɵɵtext(65, \"Symbol\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"th\", 26);\n      i0.ɵɵtext(67, \"Current Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"th\", 26);\n      i0.ɵɵtext(69, \"Past Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"th\", 26);\n      i0.ɵɵtext(71, \"Last Updated\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(72, \"th\", 26)(73, \"th\", 26);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(74, \"tbody\");\n      i0.ɵɵtemplate(75, StocksComponent_tr_75_Template, 16, 12, \"tr\", 27);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, ctx.isModalOpen))(\"ngStyle\", i0.ɵɵpureFunction1(11, _c2, ctx.isModalOpen ? \"block\" : \"none\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", true);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, ctx.isModalHistoryOpen))(\"ngStyle\", i0.ɵɵpureFunction1(15, _c2, ctx.isModalHistoryOpen ? \"block\" : \"none\"));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stocks);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgStyle, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.DecimalPipe, i4.DatePipe],\n  styles: [\".price-up[_ngcontent-%COMP%] {\\r\\n  color: green; \\r\\n}\\r\\n\\r\\n.price-down[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.price-normal[_ngcontent-%COMP%] {\\r\\n  color: black;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3RvY2tzL3N0b2Nrcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLnByaWNlLXVwIHtcclxuICBjb2xvcjogZ3JlZW47IFxyXG59XHJcblxyXG4ucHJpY2UtZG93biB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnByaWNlLW5vcm1hbCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","catchError","throwError","Swal","i0","StocksComponent","constructor","fb","http","webSocketService","stocks","orders","form","group","stockSymbol","value","disabled","orderType","quantity","openModal","setValue","isModalOpen","closeModal","openHistoryModal","headers","set","get","subscribe","data","length","fire","title","text","icon","confirmButtonText","isModalHistoryOpen","closeHistoryModal","ngOnInit","getStocks","getMessages","pipe","err","console","error","PriceUpdate","log","stock","find","s","symbol","previousPrice","priceHistories","price","currentPrice","push","timeStamp","Date","toISOString","isPriceRecentlyUpdated","setTimeout","placeOrder","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","onmouseenter","stopTimer","onmouseleave","resumeTimer","order","Symbol","Type","Quantity","TimeStamp","some","pastOrder","type","totalBought","filter","reduce","sum","totalSold","showCancelButton","cancelButtonText","then","result","isConfirmed","post","response","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["W:\\97_Applying\\EDIG\\Stock_Exchange\\Stock_Exchange\\ClientApp\\src\\app\\stocks\\stocks.component.ts","W:\\97_Applying\\EDIG\\Stock_Exchange\\Stock_Exchange\\ClientApp\\src\\app\\stocks\\stocks.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { WebSocketService } from '../../../Services/webSocket.service';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-stocks',\r\n  templateUrl: './stocks.component.html',\r\n  styleUrls: ['./stocks.component.css']\r\n})\r\nexport class StocksComponent implements OnInit {\r\n  stocks: StocksDetails[];\r\n  orders: OrdersDetails[];\r\n  form: FormGroup;\r\n  isModalOpen = false;\r\n  isModalHistoryOpen = false;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient, private webSocketService: WebSocketService) { // Inject WebSocketService\r\n    this.stocks = [];\r\n    this.orders = [];\r\n    this.form = this.fb.group({\r\n      stockSymbol: [{ value: '', disabled: true }],\r\n      orderType: [{ value: '', disabled: true }],\r\n      quantity: ['']\r\n    });\r\n  }\r\n  openModal(stockSymbol: string, orderType: string) {\r\n\r\n    this.form.setValue({\r\n      stockSymbol: stockSymbol,\r\n      orderType: orderType,\r\n      quantity: ''\r\n    });\r\n\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  closeModal() {\r\n    this.isModalOpen = false;\r\n  }\r\n  openHistoryModal() {\r\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\r\n    this.http.get<OrdersDetails[]>('http://localhost:7272/order', { headers }).subscribe(data => {\r\n      this.orders = data;\r\n      if (this.orders.length < 1) {\r\n        Swal.fire({\r\n          title: 'You have not placed any orders Yet',\r\n          text: 'Orders placed will show up here',\r\n          icon: 'error',\r\n          confirmButtonText: 'OK'\r\n        })\r\n      }\r\n      else {\r\n        this.isModalHistoryOpen = true;\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  closeHistoryModal() {\r\n    this.isModalHistoryOpen = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStocks();\r\n  }\r\n\r\n  getStocks() {\r\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\r\n\r\n    this.http.get<StocksDetails[]>('http://localhost:7272/stocks', { headers }).subscribe(data => {\r\n      this.stocks = data;\r\n    });\r\n\r\n    this.webSocketService.getMessages().pipe(\r\n      catchError(err => {\r\n        console.error('Error in subscribe:', err);\r\n        return throwError(err);\r\n      })\r\n    ).subscribe((PriceUpdate: StockUpdate) => { // Specify the type of update\r\n      console.log(\"frontend updating\");\r\n      // Find the stock that was updated\r\n      const stock = this.stocks.find(s => s.symbol === PriceUpdate.symbol);\r\n\r\n      if (stock) {\r\n        // Get the previous price from PriceHistories\r\n        const previousPrice = stock.priceHistories[stock.priceHistories.length - 1].price;\r\n\r\n        // Update the current price\r\n        stock.currentPrice = PriceUpdate.price;\r\n\r\n        // Add the new price to PriceHistories\r\n        stock.priceHistories.push({ price: PriceUpdate.price, timeStamp: new Date().toISOString() });\r\n\r\n        stock.isPriceRecentlyUpdated = true;\r\n        setTimeout(() => {\r\n          stock.isPriceRecentlyUpdated = false;\r\n        }, 3000);\r\n      }\r\n    });\r\n  }\r\n  placeOrder() {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.onmouseenter = Swal.stopTimer;\r\n        toast.onmouseleave = Swal.resumeTimer;\r\n      }\r\n    });\r\n    const headers = new HttpHeaders().set('X-Api-Key', 'EDIG_Assessment');\r\n    const order = {\r\n      Symbol: this.form.get('stockSymbol')?.value,\r\n      Type: this.form.get('orderType')?.value,\r\n      Quantity: this.form.get('quantity')?.value,\r\n      TimeStamp: new Date().toISOString()\r\n    };\r\n\r\n    if (order.Symbol == \"\" || order.Symbol == null) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: \"You have to enter a valid stock Symbol\"\r\n      });\r\n    }\r\n    else if (order.Type == \"\" || order.Type == null) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: \"You have to enter a valid order type (either Buy or Sell)\"\r\n      });\r\n    }\r\n    else if (order.Quantity == \"\" || order.Quantity == null) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: \"You have to enter a stock quantity for your order\"\r\n      });\r\n    }\r\n    else if (!this.stocks.some(stock => stock.symbol === order.Symbol)) {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: \"Your chosen Stock is not among the available stocks , please choose one of the available stocks\"\r\n      });\r\n    }\r\n    else if (!this.orders.some(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Buy\") && order.Type == \"Sell\") {\r\n      Toast.fire({\r\n        icon: \"error\",\r\n        title: \"You cannot sell a stock you don't own\"\r\n      });\r\n    }\r\n    else if (order.Type == \"Sell\") {\r\n      // Calculate the total quantity of this stock that the user has bought and sold\r\n      let totalBought = this.orders.filter(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Buy\").reduce((sum, pastOrder) => sum + pastOrder.quantity, 0);\r\n      let totalSold = this.orders.filter(pastOrder => pastOrder.symbol === order.Symbol && pastOrder.type == \"Sell\").reduce((sum, pastOrder) => sum + pastOrder.quantity, 0);\r\n\r\n      // Check if the user has enough stocks to sell\r\n      if (totalBought - totalSold < order.Quantity) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: `You don't have enough stocks to sell. You only have ${totalBought - totalSold} stocks.`\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: `Your order details are in order, are you sure you want to continue? You are about to ${order.Type} ${order.Quantity} of Stock ${order.Symbol}`,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.http.post('http://localhost:7272/order', order, { headers }).subscribe(response => {\r\n            console.log(response);\r\n            const order: OrdersDetails = {\r\n              symbol: this.form.get('stockSymbol')?.value,\r\n              type: this.form.get('orderType')?.value,\r\n              quantity: this.form.get('quantity')?.value,\r\n              timeStamp: new Date().toISOString()\r\n            };\r\n            this.orders.push(order);\r\n          });\r\n          this.closeModal();\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            title: \"Your order has been placed successfully, you can check your order history for more details\"\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport interface StocksDetails {\r\n  title: string,\r\n  symbol: string,\r\n  currentPrice: number,\r\n  priceHistories: PriceHistory[]\r\n  isPriceRecentlyUpdated?: boolean;\r\n}\r\nexport interface OrdersDetails {\r\n  symbol: string,\r\n  type: string,\r\n  quantity: number,\r\n  timeStamp: string\r\n}\r\n\r\n\r\nexport interface PriceHistory {\r\n  price: number,\r\n  timeStamp: string\r\n}\r\nexport interface StockUpdate {\r\n  symbol: string;\r\n  price: number;\r\n}\r\n","<h3 class=\"text-md-center m-5\">Sample Stocks</h3>\r\n<div style=\"background-color:snow; border-radius: 10px; box-shadow: 5px 5px 15px rgba(0,0,0,0.3); padding: 20px;\">\r\n  <div style=\"display: flex; justify-content: space-between;\">\r\n    \r\n    <!-- Order History Button -->\r\n    <button type=\"button\" class=\"btn btn-primary\" style=\"background-color:transparent; border-color:blue ;color:black\" (click)=\"openHistoryModal()\">\r\n      Order history\r\n    </button>\r\n  </div>\r\n  <!-- Order Modal -->\r\n  <div class=\"modal\"  [ngClass]=\"{'show': isModalOpen}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"orderModalLabel\" aria-hidden=\"true\" [ngStyle]=\"{'display': isModalOpen ? 'block' : 'none'}\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\" style=\"background-color:snow; border-radius: 10px; box-shadow: 5px 5px 15px rgba(0,0,0,0.3);\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"orderModalLabel\">Place Order</h5>\r\n          <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>-->\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form [formGroup]=\"form\">\r\n            <div class=\"form-group\">\r\n              <label for=\"stockSymbol\">Stock Symbol</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"stockSymbol\" formControlName=\"stockSymbol\" placeholder=\"Enter Stock Symbol\" [disabled]=\"true\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"orderType\">Order Type</label>\r\n              <select class=\"form-control\" formControlName=\"orderType\" id=\"orderType\" [disabled]=\"true\">\r\n                <option>Buy</option>\r\n                <option>Sell</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"quantity\">Quantity</label>\r\n              <input type=\"number\" class=\"form-control\" id=\"quantity\" formControlName=\"quantity\" placeholder=\"Enter Quantity\">\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"closeModal()\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"placeOrder()\">Place Order</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Order History Modal -->\r\n  <div class=\"modal\"  [ngClass]=\"{'show': isModalHistoryOpen}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"orderModalLabel\" aria-hidden=\"true\" [ngStyle]=\"{'display': isModalHistoryOpen ? 'block' : 'none'}\">\r\n    <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\r\n      <div class=\"modal-content\" style=\"background-color:snow; border-radius: 10px; box-shadow: 5px 5px 15px rgba(0,0,0,0.3);\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"orderHistoryModalLabel\">Place Order</h5>\r\n          <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>-->\r\n        </div>\r\n        <div class=\"modal-body table-responsive\">\r\n          <table class=\"table\">\r\n            <thead class=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\">Stock Symbol</th>\r\n                <th scope=\"col\">Order Type</th>\r\n                <th scope=\"col\">Quantity</th>\r\n                <th scope=\"col\">Order Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let order of orders\">\r\n                <td>{{order.symbol}}</td>\r\n                <td>{{order.type}}</td>\r\n                <td>\r\n                  {{order.quantity}}\r\n                </td>\r\n                \r\n                <td>{{order.timeStamp | date:'medium'}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"closeHistoryModal()\">Close</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\" table-responsive\">\r\n  <table class=\"table\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th scope=\"col\">Title</th>\r\n        <th scope=\"col\">Symbol</th>\r\n        <th scope=\"col\">Current Price</th>\r\n        <th scope=\"col\">Past Price</th>\r\n        <th scope=\"col\">Last Updated</th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let stock of stocks\">\r\n        <td>{{stock.title}}</td>\r\n        <td>{{stock.symbol}}</td>\r\n        <td [ngClass]=\"{'price-up': stock.priceHistories && stock.priceHistories.length > 1 && stock.currentPrice > stock.priceHistories[stock.priceHistories.length - 2].price, 'price-down': stock.priceHistories && stock.priceHistories.length > 1 && stock.currentPrice < stock.priceHistories[stock.priceHistories.length - 2].price}\">\r\n          {{stock.currentPrice | number:'1.2-2'}}\r\n        </td>\r\n\r\n        <td *ngIf=\"stock.priceHistories && stock.priceHistories.length > 0\">{{stock.priceHistories[stock.priceHistories.length - 2].price | number:'1.2-2'}}</td>\r\n        <td *ngIf=\"stock.priceHistories && stock.priceHistories.length > 0\">{{stock.priceHistories[stock.priceHistories.length - 2].timeStamp | date:'medium'}}</td>\r\n        <td>\r\n          <!-- Place Order Buttons -->\r\n          <button style=\"background-color:springgreen\" type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(stock.symbol,'Buy')\">\r\n            Buy\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <!-- Place Order Buttons -->\r\n          <button style=\"background-color:red\" type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(stock.symbol,'Sell')\">\r\n            Sell\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}